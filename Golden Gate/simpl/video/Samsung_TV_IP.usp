/*******************************************************************************************
  SIMPL+ Module Information
*******************************************************************************************/

/*******************************************************************************************
  Compiler Directives
*******************************************************************************************/
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

#DEFINE_CONSTANT TCPPORT 1515         
#DEFINE_CONSTANT cnDisplayModeTuner 100
#DEFINE_CONSTANT cnDisplayModeHDMI1 101
#DEFINE_CONSTANT cnDisplayModeHDMI2 102											

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
*******************************************************************************************/

DIGITAL_INPUT power_on;		
DIGITAL_INPUT power_off;
DIGITAL_INPUT audio_external;
DIGITAL_INPUT source_hdmi_1;
DIGITAL_INPUT source_hdmi_2;
ANALOG_INPUT direct_channel;
STRING_INPUT destination_ip[32];
 
TCP_CLIENT ClientTCP[128];

 
                              
/*******************************************************************************************
  Global Variables
*******************************************************************************************/
STRING tcpCommand[64];
INTEGER nDisplayMode;

   
/*******************************************************************************************
  Functions
*******************************************************************************************/
/*******************************************************************************************
  Event Handlers
*******************************************************************************************/

SOCKETCONNECT ClientTCP 
{
   	SOCKETSEND(ClientTCP,tcpCommand);
	SOCKETDISCONNECTCLIENT(ClientTCP);
}

CHANGE direct_channel
{
	IF(direct_channel)
	{		
		IF(nDisplayMode <> cnDisplayModeTuner)
		{
			nDisplayMode = cnDisplayModeTuner;
			tcpCommand = "\xAA\x14\xFE\x01\x40\x53";
			SOCKETCONNECTCLIENT(ClientTCP,destination_ip,TCPPORT,0);
                                                                    
			WAIT(200)
			{
				MAKESTRING(tcpCommand, "\xAA\x17\xFE\x08\x01\x01\x01\x00%s\x00\x00\x00%s", Chr(direct_channel), Chr(direct_channel+32));
				TRACE("Samsung [%s] Direct Entry Channel [%u]: %u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u \n", destination_ip, direct_channel, byte(tcpCommand,1), byte(tcpCommand,2), byte(tcpCommand,3), byte(tcpCommand,4), byte(tcpCommand,5), byte(tcpCommand,6), byte(tcpCommand,7), byte(tcpCommand,8), byte(tcpCommand,9), byte(tcpCommand,10), byte(tcpCommand,11), byte(tcpCommand,12), byte(tcpCommand,13));
				SOCKETCONNECTCLIENT(ClientTCP,destination_ip,TCPPORT,0);	
			}
        }
		ELSE
		{
			MAKESTRING(tcpCommand, "\xAA\x17\xFE\x08\x01\x01\x01\x00%s\x00\x00\x00%s", Chr(direct_channel), Chr(direct_channel+32));
			TRACE("Samsung [%s] Direct Entry Channel [%u]: %u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u,%u \n", destination_ip, direct_channel, byte(tcpCommand,1), byte(tcpCommand,2), byte(tcpCommand,3), byte(tcpCommand,4), byte(tcpCommand,5), byte(tcpCommand,6), byte(tcpCommand,7), byte(tcpCommand,8), byte(tcpCommand,9), byte(tcpCommand,10), byte(tcpCommand,11), byte(tcpCommand,12), byte(tcpCommand,13));
			SOCKETCONNECTCLIENT(ClientTCP,destination_ip,TCPPORT,0);
		}
	}
}
                      
PUSH power_on
{
	tcpCommand = "\xAA\x11\xFE\x01\x01\x11";
	SOCKETCONNECTCLIENT(ClientTCP,destination_ip,TCPPORT,0);
}

PUSH power_off
{
	tcpCommand = "\xAA\x11\xFE\x01\x00\x10";
	SOCKETCONNECTCLIENT(ClientTCP,destination_ip,TCPPORT,0);
}

PUSH audio_external
{
	tcpCommand = "\xAA\x68\xFE\x01\x01\x68";
	SOCKETCONNECTCLIENT(ClientTCP,destination_ip,TCPPORT,0);
}

PUSH source_hdmi_1
{
	nDisplayMode = cnDisplayModeHDMI1;
	tcpCommand = "\xAA\x14\xFE\x01\x21\x34";
	SOCKETCONNECTCLIENT(ClientTCP,destination_ip,TCPPORT,0);
}

PUSH source_hdmi_2
{
	nDisplayMode = cnDisplayModeHDMI2;
	tcpCommand = "\xAA\x14\xFE\x01\x23\x36";
	SOCKETCONNECTCLIENT(ClientTCP,destination_ip,TCPPORT,0);
}

/*******************************************************************************************
  Main()
*******************************************************************************************/



















